---
bibliography: references.bib
---

```{r}
#| echo: false

source("../_common.R")
```


```{r}
#| results: "asis"
#| echo: false

status(
    "validacion"
)
```

# Introducción {#sec-Chapter1}

Este documento presenta el desarrollo del paquete *metaSurvey* disponible en R [@rcoreteam2023]. El objetivo principal de *metaSurvey* es permitir al usuario construir indicadores de manera reproducible y transparente, otorgándole un control total sobre el proceso de transformación de los microdatos a indicadores.

A lo largo del documento, se abordan varios conceptos clave para el desarrollo del paquete, como la meta-programación, conceptos de inferencia en muestreo de poblaciones finitas, esquemas de trabajo para desarrollar paquetes en R, entre otros. Se presentarán ejemplos de cómo utilizar el paquete *metaSurvey* para construir indicadores de mercado laboral a partir de los microdatos de la Encuesta Continua de Hogares (**ECH**) del Instituto Nacional de Estadística de Uruguay (INE) y, para demostrar su flexibilidad, se incluirá un ejemplo con la Encuesta Permanente de Hogares (**EPH**) del Instituto Nacional de Estadística y Censos de Argentina (INDEC).

La motivación principal detrás del desarrollo de *metaSurvey* fue la necesidad de contar con un paquete que permitiera al usuario tener un control total y transparente sobre el proceso de transformación de los microdatos a indicadores. En general, los paquetes existentes en R para el análisis de encuestas por muestreo son muy sensibles a la estructura y las variables que componen la encuesta. Un cambio en la estructura de la encuesta suele implicar una actualización del paquete utilizado para obtener los indicadores, lo que resulta poco flexible ante cambios en la estructura de la encuesta, que pueden ser frecuentes en la práctica. En las implementaciones actuales, el usuario cuenta con una función de alto nivel que actúa como una caja negra, donde no se permite modificar el código para adaptarlo a sus necesidades o entender cada paso que se realiza para obtener el indicador sin tener que leer el código fuente o la documentación adjunta.

El problema de sensibilidad a la estructura de la encuesta se puede observar en el paquete *ech* [@detomasi2020], donde existen funciones para crear variables de mercado laboral, educación o ingresos, pero estas funciones dependen de la existencia de ciertas variables en la encuesta, cuya estructura puede cambiar de una versión a otra de la encuesta. Sin revisar el cuerpo de la función, no se conoce el proceso de construcción de variables. Algo similar ocurre con el paquete *eph* [@kozlowski2020], donde se tienen funciones de alto nivel que no permiten modificar el código para adaptarlo a sus necesidades o entender cada paso que se realiza para obtener el indicador sin inspeccionar a fondo cómo se construyen las funciones del paquete.

Esta inspección del código fuente, como consultar el repositorio de GitHub del paquete o revisar la definición de la función, puede ser una tarea tediosa y no garantiza que el usuario pueda entender el proceso de construcción de variables. Esto se debe a que el código puede ser muy extenso o que el usuario no tenga el conocimiento suficiente para entender el código o se empleen ciertos frameworks que el usuario no conozca, como el uso de las librerías *dplyr* [@wickham2023] o *tidyr* [@wickham2024], muy populares en R para el manejo de datos.

También puede ser difícil aislar el proceso de manipulación de la encuesta de la implementación específica de la función para manejar la forma de presentación, estructura del objeto a devolver, etc. Un claro ejemplo de esto puede verse en el paquete *tidycensus* [@walker2024], donde existe una función para obtener datos sobre la migración de la comunidad estadounidense, pero en la misma función también se encuentran pasos para mejorar la estructura del conjunto de datos a devolver. En este sentido, el usuario no puede aislar el proceso de recodificación/construcción de variables sobre variables originales y la obtención de datos geográficos y presentación.

En este sentido, es importante que el usuario pueda tener un control total sobre el proceso de transformación de los microdatos a indicadores, ya que esto permite que el usuario pueda validar y entender el proceso de construcción de indicadores, además de brindar una herramienta común libre de estilos de programación y definiendo con simples pasos el proceso de construcción de variables sintéticas, como recodificar variables creando grupos en base a criterios complejos, tratamiento de variables continuas como el ingreso salarial en base a metodología rigurosa. Es crucial que este proceso sea transparente y entendible para el usuario.

Además de estos problemas, en general, obtener la información histórica de indicadores es un proceso tedioso y propenso a errores, especialmente si proviene de encuestas donde su estructura y/o forma de preguntar o su codificación puede cambiar con el tiempo. Esto resulta en un proceso extenso y difícil de entender hasta llegar a la construcción de esta serie de indicadores. Muchas veces, diferentes usuarios hacen el mismo proceso de construcción de indicadores de manera independiente y sin compartir el código fuente o la metodología de construcción de indicadores, ya que cada uno utiliza su propio estilo de programación o hasta diferentes paquetes estadísticos, en su mayoría propietarios como SPSS, SAS o STATA, donde si bien el usuario puede compartir la sintaxis para su construcción, esta está ligada al software y depende de que el usuario tenga el software instalado con una licencia activa y pueda correr el código.

Una vez claro el proceso de creación de variables, también es importante tener en cuenta que al obtener indicadores se realiza un proceso de inferencia asociado al diseño muestral. Tener nociones básicas del mecanismo que permitió obtener estos resultados permite, además de reportar una estimación puntual, medir la incertidumbre asociada a nuestra estimación. Es decir, no es útil reportar una tasa de empleo del 4% si no se cuenta con un intervalo de confianza asociado o una estimación de su desviación estándar para medir la incertidumbre del estimador.

En este sentido, es importante que el usuario no experto tenga de forma nativa una forma de obtener estimaciones puntuales y sus errores asociados de manera sencilla. Esto permitirá, además de brindar resultados puntuales, hacer recomendaciones sobre la utilidad de la estimación en el caso de que se cuente con una variabilidad alta. En general, obtener la estimación una vez culminado el proceso de preprocesamiento es relativamente sencillo, pero puede ser que se reporte una estimación donde no exista un tamaño de muestra suficiente para obtener una estimación confiable y/o que la variabilidad de la estimación sea alta y no sea recomendable su uso.

En este sentido, *metaSurvey* pretende ser una herramienta relevante para el trabajo con encuestas en ciencias sociales, buscando solucionar las limitaciones anteriormente mencionadas. Todo el proceso de transformación de los microdatos a indicadores se realiza a través de una serie de funciones que permiten al usuario tener un control total y transparente sobre el proceso de transformación de los microdatos a indicadores.

Además, *metaSurvey* permite que el usuario pueda realizar el proceso de transformación de los microdatos a indicadores de manera reproducible y transparente. El usuario puede compartir el código de una forma entendible, casi como un "recetario de cocina".

El procedimiento aplicado a los datos utilizados para obtener los indicadores se realiza mediante lo que denominamos steps y recipes, conformando así una especie de camino transparente para la construcción de indicadores. Esto permite compartir en forma visual un DAG (Directed Acyclic Graph) que permite visualizar el proceso de construcción de indicadores sin tener que abrir un script de R. En complemento al proceso de creación de variables, *metaSurvey* permite que el usuario pueda obtener estimaciones puntuales y sus errores asociados de manera sencilla y brindar recomendaciones sobre la utilidad de la estimación en el caso de que se cuente con una variabilidad alta en la estimación, en base a recomendaciones a su coeficiente de variación o métricas similares.

El enfoque que permite la flexibilidad a la hora de construir los indicadores es la meta-programación. La meta-programación es un paradigma de programación que permite que un programa pueda modificar su estructura interna en tiempo de ejecución. En R, la meta-programación se realiza a través de las funciones `eval`, `parse`, `substitute`, `do.call` y `quote`, que permiten evaluar y parsear código de manera dinámica. En este sentido, *metaSurvey* utiliza la meta-programación para permitir que el usuario pueda modificar el código que se utiliza para transformar los microdatos a indicadores, teniendo funciones de alto nivel similares a las que se utilizan en el paquete recipes de la librería tidymodels [@kuhn2024].

En los siguientes capítulos se mencionarán conceptos clave para el desarrollo del paquete, como la meta-programación, conceptos de inferencia en muestreo de poblaciones finitas, esquema de trabajo para desarrollar paquetes en R, etc. A continuación, se mencionarán diferentes antecedentes y trabajos relacionados con el paquete *metaSurvey* donde se utiliza la meta-programación y herramientas en las que fue inspirado el paquete. Luego, se formalizarán diferentes conceptos sobre metodología para la estimación de parámetros poblacionales y su varianza y conceptos de meta-programación y cómo se utilizan en el desarrollo del paquete. Para finalizar, se presentarán ejemplos de cómo utilizar el paquete *metaSurvey* para construir indicadores de mercado laboral a partir de los microdatos de la **ECH** y para mostrar su flexibilidad, se incluirá un ejemplo con la **EPH**.

