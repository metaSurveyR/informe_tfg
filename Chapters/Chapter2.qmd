# Metaprogramación {#sec-Chapter2}

En este capitulo se introducen los conceptos de Metaprogramación en R y se presentan las funciones básicas para la manipulación de expresiones y funciones así como también haciendo un breve mención sobre la aplicación en **metaSurvey**.

## Principios básicos

Dentro de la programación existen diferentes paradigmas de programación, entre ellos se encuentra la programación orientada objetos (OOP), la programación funcional, programación lógica entre otras. En R, el paradigma predominante es la programación orientada a objetos, sin embargo, R también permite la programación funcional y la programación lógica, la facilidad o aplicación depede del contexto y la utilización de ciertas librerias. La metaprogramación es una técnica que se puede aplicar en cualquier paradigma de programación, sin embargo, en R la metaprogramación se aplica principalmente en la programación funcional.

La metaprogramación es una técnica que permite que el código pueda ser manipulado como datos. En R, el código se representa como una expresión. Una expresión es una estructura de datos que representa una instrucción o una parte de una instrucción. Por ejemplo, la expresión `x <- 1` representa la instrucción de asignar el valor 1 a la variable `x`. La expresión `x + 1` representa la instrucción de sumar 1 al valor de la variable `x`. La expresión `x <- 1; x + 1` representa la instrucción de asignar el valor 1 a la variable `x` y luego sumar 1 al valor de la variable `x`. Una expresión puede ser tan simple como una variable o tan compleja como una función anónima (o también conocida como función lambda).

En R, el código es un tipo de dato más. Esto permite que el código pueda ser manipulado como cualquier otro tipo de dato. Por ejemplo, se puede asignar código a una variable, pasar código como argumento a una función, o devolver código como resultado de una función. Manipular al código como datos es lo que se conoce como metaprogramación.

Para entender la metaprogramación es necesario entender los siguientes conceptos:

### El código cmo datos

Dentro de este paradigma, no vamos a operar con un conjunto de datos rectangular sino que vamos a operar con los argumentos de una función (**formals**), el cuerpo de una función (**body**), el entorno de una función (**environment**), para generar de forma dínamica y flexible código para maipular, procesar y aplicar inferencia sobre encuestas por muestreo.

### El código como expresiones

Al oprerar con expresiones es importante saber el detras de escenas al ejecutar código este concepto es conocido como **Abstract syntax tree**:

```{r,echo = TRUE, eval = FALSE}
# TODO: Cambiar el ejemplo por uno de metaSurvey haciendo referencia al engine.
lobstr::ast(f(a, "b"))
#> █─f 
#> ├─a 
#> └─"b"
```
### El código puede generar código

### El código puede ser evaluado

